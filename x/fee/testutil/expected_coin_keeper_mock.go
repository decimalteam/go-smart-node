// Code generated by MockGen. DO NOT EDIT.
// Source: bitbucket.org/decimalteam/go-smart-node/x/fee/types (interfaces: CoinKeeper)

// Package testutil is a generated GoMock package.
package testutil

import (
	reflect "reflect"

	types "bitbucket.org/decimalteam/go-smart-node/x/coin/types"
	types0 "github.com/cosmos/cosmos-sdk/types"
	gomock "github.com/golang/mock/gomock"
)

// MockCoinKeeper is a mock of CoinKeeper interface.
type MockCoinKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockCoinKeeperMockRecorder
}

// MockCoinKeeperMockRecorder is the mock recorder for MockCoinKeeper.
type MockCoinKeeperMockRecorder struct {
	mock *MockCoinKeeper
}

// NewMockCoinKeeper creates a new mock instance.
func NewMockCoinKeeper(ctrl *gomock.Controller) *MockCoinKeeper {
	mock := &MockCoinKeeper{ctrl: ctrl}
	mock.recorder = &MockCoinKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCoinKeeper) EXPECT() *MockCoinKeeperMockRecorder {
	return m.recorder
}

// BurnPoolCoins mocks base method.
func (m *MockCoinKeeper) BurnPoolCoins(arg0 types0.Context, arg1 string, arg2 types0.Coins) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BurnPoolCoins", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// BurnPoolCoins indicates an expected call of BurnPoolCoins.
func (mr *MockCoinKeeperMockRecorder) BurnPoolCoins(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BurnPoolCoins", reflect.TypeOf((*MockCoinKeeper)(nil).BurnPoolCoins), arg0, arg1, arg2)
}

// GetCoin mocks base method.
func (m *MockCoinKeeper) GetCoin(arg0 types0.Context, arg1 string) (types.Coin, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCoin", arg0, arg1)
	ret0, _ := ret[0].(types.Coin)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCoin indicates an expected call of GetCoin.
func (mr *MockCoinKeeperMockRecorder) GetCoin(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCoin", reflect.TypeOf((*MockCoinKeeper)(nil).GetCoin), arg0, arg1)
}
