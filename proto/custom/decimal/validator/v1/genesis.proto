syntax = "proto3";
package decimal.validator.v1;

import "gogoproto/gogo.proto";

import "cosmos_proto/cosmos.proto";

import "decimal/validator/v1/validator.proto";
import "decimal/validator/v1/params.proto";

option go_package = "bitbucket.org/decimalteam/go-smart-node/x/validator/types";

// GenesisState defines the module's genesis state.
message GenesisState {
  // validators defines the validator set at genesis.
  repeated Validator validators = 1 [ (gogoproto.nullable) = false ];
  // delegations defines the delegations bonded to validators at genesis.
  repeated Delegation delegations = 2 [ (gogoproto.nullable) = false ];
  // undelegations defines the undelegations active at genesis.
  repeated Undelegation undelegations = 3 [ (gogoproto.nullable) = false ];
  // redelegations defines the redelegations active at genesis.
  repeated Redelegation redelegations = 4 [ (gogoproto.nullable) = false ];
  // last_validator_powers defines a historical list of the last-block's bonded validators.
  repeated LastValidatorPower last_validator_powers = 5 [ (gogoproto.nullable) = false ];
  // last_total_power tracks the total amounts of validators power recorded during the previous end block.
  int64 last_total_power = 6;
  // params defines all the module's parameters.
  Params params = 7 [ (gogoproto.nullable) = false ];
  // exported is true if genesis was exported from the state.
  bool exported = 8;
}

// LastValidatorPower defines an object containing a pair of validator address and it's voting power.
message LastValidatorPower {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // address is the address of the validator.
  string address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  // power defines the voting power of the validator.
  int64 power = 2;
}
