syntax = "proto3";
package decimal.validator.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

import "cosmos_proto/cosmos.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

import "decimal/validator/v1/params.proto";
import "decimal/validator/v1/validator.proto";

option go_package = "bitbucket.org/decimalteam/go-smart-node/x/validator/types";

// Query defines the gRPC querier service.
service Query {
  // Validators queries all validators that match the given status.
  rpc Validators(QueryValidatorsRequest) returns (QueryValidatorsResponse) {
    option (google.api.http).get = "/decimal/validator/v1/validators";
  }

  // Validator queries validator info for given validator address.
  rpc Validator(QueryValidatorRequest) returns (QueryValidatorResponse) {
    option (google.api.http).get = "/decimal/validator/v1/validators/{validator}";
  }

  // ValidatorDelegations queries delegate info for given validator.
  rpc ValidatorDelegations(QueryValidatorDelegationsRequest) returns (QueryValidatorDelegationsResponse) {
    option (google.api.http).get = "/decimal/validator/v1/validators/{validator}/delegations";
  }

  // ValidatorRedelegations queries redelegations of a validator.
  rpc ValidatorRedelegations(QueryValidatorRedelegationsRequest) returns (QueryValidatorRedelegationsResponse) {
    option (google.api.http).get = "/decimal/validator/v1/validators/{validator}/redelegations";
  }

  // ValidatorUndelegations queries undelegations of a validator.
  rpc ValidatorUndelegations(QueryValidatorUndelegationsRequest) returns (QueryValidatorUndelegationsResponse) {
    option (google.api.http).get = "/decimal/validator/v1/validators/{validator}/undelegations";
  }

  // Delegations queries delegations info for given validator delegator pair.
  rpc Delegations(QueryDelegationsRequest) returns (QueryDelegationsResponse) {
    option (google.api.http).get = "/decimal/validator/v1/validators/{validator}/delegations/{delegator}";
  }

  // Redelegations queries redelegations info for given validator delegator pair.
  rpc Redelegations(QueryRedelegationsRequest) returns (QueryRedelegationsResponse) {
    option (google.api.http).get = "/decimal/validator/v1/validators/{validator}/delegations/{delegator}/redelegations";
  }

  // Undelegation queries undelegation info for given validator delegator pair.
  rpc Undelegation(QueryUndelegationRequest) returns (QueryUndelegationResponse) {
    option (google.api.http).get = "/decimal/validator/v1/validators/{validator}/delegations/{delegator}/undelegation";
  }

  // DelegatorDelegations queries all delegations of a given delegator address.
  rpc DelegatorDelegations(QueryDelegatorDelegationsRequest) returns (QueryDelegatorDelegationsResponse) {
    option (google.api.http).get = "/decimal/validator/v1/delegators/{delegator}/delegations";
  }

  // DelegatorRedelegations queries all redelegations of a given delegator address.
  rpc DelegatorRedelegations(QueryDelegatorRedelegationsRequest) returns (QueryDelegatorRedelegationsResponse) {
    option (google.api.http).get = "/decimal/validator/v1/delegators/{delegator}/redelegations";
  }

  // DelegatorUndelegations queries all undelegations of a given delegator address.
  rpc DelegatorUndelegations(QueryDelegatorUndelegationsRequest) returns (QueryDelegatorUndelegationsResponse) {
    option (google.api.http).get = "/decimal/validator/v1/delegators/{delegator}/undelegations";
  }

  // DelegatorValidators queries all validators info for given delegator address.
  rpc DelegatorValidators(QueryDelegatorValidatorsRequest) returns (QueryDelegatorValidatorsResponse) {
    option (google.api.http).get = "/decimal/validator/v1/delegators/{delegator}/validators";
  }

  // DelegatorValidator queries validator info for given delegator validator pair.
  rpc DelegatorValidator(QueryDelegatorValidatorRequest) returns (QueryDelegatorValidatorResponse) {
    option (google.api.http).get = "/decimal/validator/v1/delegators/{delegator}/validators/{validator}";
  }

  // HistoricalInfo queries the historical info for given height.
  rpc HistoricalInfo(QueryHistoricalInfoRequest) returns (QueryHistoricalInfoResponse) {
    option (google.api.http).get = "/decimal/validator/v1/historical_info/{height}";
  }

  // Pool queries the pool info.
  rpc Pool(QueryPoolRequest) returns (QueryPoolResponse) {
    option (google.api.http).get = "/decimal/validator/v1/pool";
  }

  // CustomCoinPrice queries the custom coin price for delegation.
  rpc CustomCoinPrice(QueryCustomCoinPriceRequest) returns (QueryCustomCoinPriceResponse) {
    option (google.api.http).get = "/decimal/validator/v1/custom_coin_price/{denom}";
  }

  // TotalCustomCoin queries the total amount bonded custom coins.
  rpc TotalCustomCoin(QueryTotalCustomCoinRequest) returns (QueryTotalCustomCoinResponse) {
    option (google.api.http).get = "/decimal/validator/v1/total_custom_coin/{denom}";
  }

  // Params queries the module params.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/decimal/validator/v1/params";
  }
}

// QueryValidatorsRequest is request type for the Query/Validators RPC method.
message QueryValidatorsRequest {
  // status enables to query for validators matching a given status.
  string status = 1;

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryValidatorsResponse is response type for the Query/Validators RPC method.
message QueryValidatorsResponse {
  // validators contains all the queried validators.
  repeated Validator validators = 1 [ (gogoproto.nullable) = false ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryValidatorRequest is response type for the Query/Validator RPC method.
message QueryValidatorRequest {
  // validator defines the validator address to query for.
  string validator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// QueryValidatorResponse is response type for the Query/Validator RPC method.
message QueryValidatorResponse {
  // validator defines the validator info.
  Validator validator = 1 [ (gogoproto.nullable) = false ];
}

// QueryValidatorDelegationsRequest is request type for the Query/ValidatorDelegations RPC method.
message QueryValidatorDelegationsRequest {
  // validator defines the validator address to query for.
  string validator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryValidatorDelegationsResponse is response type for the Query/ValidatorDelegations RPC method.
message QueryValidatorDelegationsResponse {
  repeated Delegation delegations = 1 [ (gogoproto.nullable) = false ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryValidatorRedelegationsRequest is required type for the Query/ValidatorRedelegations RPC method.
message QueryValidatorRedelegationsRequest {
  // validator defines the validator address to query for.
  string validator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryValidatorRedelegationsResponse is response type for the Query/ValidatorRedelegations RPC method.
message QueryValidatorRedelegationsResponse {
  repeated Redelegation redelegations = 1 [ (gogoproto.nullable) = false ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryValidatorUndelegationsRequest is required type for the Query/ValidatorUndelegations RPC method.
message QueryValidatorUndelegationsRequest {
  // validator defines the validator address to query for.
  string validator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryValidatorUndelegationsResponse is response type for the Query/ValidatorUndelegations RPC method.
message QueryValidatorUndelegationsResponse {
  repeated Undelegation undelegations = 1 [ (gogoproto.nullable) = false ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryDelegationsRequest is request type for the Query/Delegations RPC method.
message QueryDelegationsRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // validator defines the validator address to query for.
  string validator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // delegator defines the delegator address to query for.
  string delegator = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// QueryDelegationsResponse is response type for the Query/Delegations RPC method.
message QueryDelegationsResponse {
  // delegations defines the delegations list.
  repeated Delegation delegations = 1 [ (gogoproto.nullable) = false ];
}

// QueryRedelegationsRequest is request type for the Query/Redelegations RPC method.
message QueryRedelegationsRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // validator defines the validator address to query for.
  string validator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // delegator defines the delegator address to query for.
  string delegator = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// QueryDelegationsResponse is response type for the Query/Redelegations RPC method.
message QueryRedelegationsResponse {
  // redelegations defines the redelegations list for given delegator validator pair.
  repeated Redelegation redelegations = 1 [ (gogoproto.nullable) = false ];
}

// QueryUndelegationRequest is request type for the Query/Undelegation RPC method.
message QueryUndelegationRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // validator defines the validator address to query for.
  string validator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // delegator defines the delegator address to query for.
  string delegator = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// QueryDelegationsResponse is response type for the Query/Undelegations RPC method.
message QueryUndelegationResponse {
  // undelegations defines the undelegation for given delegator validator pair.
  Undelegation undelegation = 1 [ (gogoproto.nullable) = false ];
}

// QueryDelegatorDelegationsRequest is request type for the Query/DelegatorDelegations RPC method.
message QueryDelegatorDelegationsRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // delegator defines the delegator address to query for.
  string delegator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryDelegatorDelegationsResponse is response type for the Query/DelegatorDelegations RPC method.
message QueryDelegatorDelegationsResponse {
  // delegations defines all the delegations' info of a delegator.
  repeated Delegation delegations = 1 [ (gogoproto.nullable) = false ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryDelegatorRedelegationsRequest is request type for the Query/DelegatorRedelegations RPC method.
message QueryDelegatorRedelegationsRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // delegator defines the delegator address to query for.
  string delegator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryDelegatorRedelegationsResponse is response type for the Query/DelegatorRedelegations RPC method.
message QueryDelegatorRedelegationsResponse {
  repeated Redelegation redelegations = 1 [ (gogoproto.nullable) = false ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryDelegatorUndelegationsRequest is request type for the Query/DelegatorUndelegations RPC method.
message QueryDelegatorUndelegationsRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // delegator defines the delegator address to query for.
  string delegator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryDelegatorUndelegationsResponse is response type for the Query/DelegatorUndelegations RPC method.
message QueryDelegatorUndelegationsResponse {
  repeated Undelegation undelegations = 1 [ (gogoproto.nullable) = false ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryDelegatorValidatorsRequest is request type for the Query/DelegatorValidators RPC method.
message QueryDelegatorValidatorsRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // delegator defines the delegator address to query for.
  string delegator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryDelegatorValidatorsResponse is response type for the Query/DelegatorValidators RPC method.
message QueryDelegatorValidatorsResponse {
  // validators defines the validators' info of a delegator.
  repeated Validator validators = 1 [ (gogoproto.nullable) = false ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryDelegatorValidatorRequest is request type for the Query/DelegatorValidator RPC method.
message QueryDelegatorValidatorRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // delegator defines the delegator address to query for.
  string delegator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // validator defines the validator address to query for.
  string validator = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// QueryDelegatorValidatorResponse response type for the Query/DelegatorValidator RPC method.
message QueryDelegatorValidatorResponse {
  // validator defines the validator info.
  Validator validator = 1 [ (gogoproto.nullable) = false ];
}

// QueryHistoricalInfoRequest is request type for the Query/HistoricalInfo RPC method.
message QueryHistoricalInfoRequest {
  // height defines at which height to query the historical info.
  int64 height = 1;
}

// QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC method.
message QueryHistoricalInfoResponse {
  // hist defines the historical info at the given height.
  HistoricalInfo hist = 1;
}

// QueryPoolRequest is request type for the Query/Pool RPC method.
message QueryPoolRequest {}

// QueryPoolResponse is response type for the Query/Pool RPC method.
message QueryPoolResponse {
  // pool defines the pool info.
  Pool pool = 1 [ (gogoproto.nullable) = false ];
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryCustomCoinPriceRequest {
  string denom = 1;
}

message QueryCustomCoinPriceResponse {
  string price = 1 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

message QueryTotalCustomCoinRequest {
  string denom = 1;
}

message QueryTotalCustomCoinResponse {
  string total_amount = 1 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}