syntax = "proto3";
package decimal.fee.v1;

import "gogoproto/gogo.proto";

import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

import "decimal/fee/v1/fee.proto";

option go_package = "bitbucket.org/decimalteam/go-smart-node/x/fee/types";

// EventUpdateCoinPrices defines event emitted when coin prices are updated.
message EventUpdateCoinPrices {
  string oracle = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  repeated CoinPrice prices = 2 [ (gogoproto.nullable) = false ];
}

// EventPayCommission defines event emitted when any commission for a transaction is payed.
message EventPayCommission {
  string payer = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  repeated cosmos.base.v1beta1.Coin coins = 2
      [ (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false ];
}
