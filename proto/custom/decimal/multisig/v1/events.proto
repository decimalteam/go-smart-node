syntax = "proto3";
package decimal.multisig.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "bitbucket.org/decimalteam/go-smart-node/x/multisig/types";

// EventCreateWallet defines event emitted when new multisig wallet is created.
message EventCreateWallet {
  string sender = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string wallet = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  repeated string owners = 3;
  repeated uint32 weights = 4;
  uint32 threshold = 5;
}

message EventCreateTransaction {
  string sender = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string wallet = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string transaction = 4;
}

message EventSignTransaction {
  string sender = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string wallet = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string transaction = 3;
  uint32 signer_weight = 4;
  uint32 confirmations = 5;
  bool confirmed = 6;
}
