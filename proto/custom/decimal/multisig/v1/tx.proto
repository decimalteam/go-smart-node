syntax = "proto3";
package decimal.multisig.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";

import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";

option go_package = "bitbucket.org/decimalteam/go-smart-node/x/multisig/types";

// Msg defines the module Msg service.
service Msg {
  // CreateWallet defines message for creating multisig wallet.
  rpc CreateWallet(MsgCreateWallet) returns (MsgCreateWalletResponse);

  // CreateTransaction defines message for creating multisig transaction in existing wallet.
  rpc CreateTransaction(MsgCreateTransaction) returns (MsgCreateTransactionResponse);
  // SignTransaction defines message for signing existing multisig transaction.
  rpc SignTransaction(MsgSignTransaction) returns (MsgSignTransactionResponse);
}

// MsgCreateWallet defines a SDK message for creating multisig wallet.
message MsgCreateWallet {
  option (cosmos.msg.v1.signer) = "sender";

  string sender = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  repeated string owners = 2;
  repeated uint32 weights = 3;
  uint32 threshold = 4;
}

// MsgCreateWalletResponse defines the Msg/CreateWallet response type.
message MsgCreateWalletResponse { string wallet = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ]; }

////////
// MsgCreateTransaction defines a SDK message for creating multisig transaction in existing wallet.
message MsgCreateTransaction {
  option (cosmos.msg.v1.signer) = "sender";

  string sender = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string wallet = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  google.protobuf.Any content = 3 [(cosmos_proto.accepts_interface) = "Content"];
}

// MsgCreateTransactionResponse defines the MsgCreateTransaction response type.
message MsgCreateTransactionResponse { string id = 1 [ (gogoproto.customname) = "ID" ]; }

// MsgSignTransaction defines a SDK message for signing existing multisig transaction.
message MsgSignTransaction {
  option (cosmos.msg.v1.signer) = "sender";

  string sender = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string id = 2 [ (gogoproto.customname) = "ID" ];
}

// MsgSignTransactionResponse defines the Msg/SignTransaction response type.
message MsgSignTransactionResponse {}
